name: Build iPXE

on:
  workflow_call:
  workflow_dispatch:

env:
  IPXE_REF: 969ce2c559a6841a949a1b73a3967b1889e0c999

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - name: Cache packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives/*.deb
          key: apt-cache-${{ env.IPXE_REF }}
          restore-keys: |
            apt-cache-

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y -d -o Acquire::Retries=50 \
            mtools gcc make libc6-dev-i386 liblzma-dev perl gcc-arm-none-eabi gcc-aarch64-linux-gnu

  x86:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ipxe/ipxe
          ref: ${{ env.IPXE_REF }}
          fetch-depth: 0 # we need the entire history to build iPXE

      - name: Cache binaries
        uses: actions/cache@v4
        id: cache
        with:
          key: ipxe-x86-${{ env.IPXE_REF }}
          path: |
            src/bin/*.kpxe
            src/bin*/*.efi

      - name: Get cached dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: /var/cache/apt/archives/*.deb
          key: apt-cache-${{ env.IPXE_REF }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          make -j4 -C src \
              bin/undionly.kpxe \
              bin-x86_64-efi/ipxe.efi \
              bin-x86_64-efi/snponly.efi \
              bin-i386-efi/ipxe.efi \
              bin-i386-efi/snponly.efi

  arm32:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ipxe/ipxe
          ref: ${{ env.IPXE_REF }}
          fetch-depth: 0 # we need the entire history to build iPXE

      - name: Cache binaries
        uses: actions/cache@v4
        id: cache
        with:
          key: ipxe-arm32-${{ env.IPXE_REF }}
          path: |
            src/bin-arm32-efi/snponly.efi

      - name: Get cached dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: /var/cache/apt/archives/*.deb
          key: apt-cache-${{ env.IPXE_REF }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          make -j4 -C src CROSS=arm-none-eabi- ARCH=arm32 \
              bin-arm32-efi/snponly.efi

  arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ipxe/ipxe
          ref: ${{ env.IPXE_REF }}
          fetch-depth: 0 # we need the entire history to build iPXE

      - name: Cache binaries
        uses: actions/cache@v4
        id: cache
        with:
          key: ipxe-arm64-${{ env.IPXE_REF }}
          path: |
            src/bin-arm64-efi/snponly.efi

      - name: Get cached dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: /var/cache/apt/archives/*.deb
          key: apt-cache-${{ env.IPXE_REF }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          make -j4 -C src CROSS=aarch64-linux-gnu- ARCH=arm64 \
              bin-arm64-efi/snponly.efi

  artifacts-from-cache:
    runs-on: ubuntu-latest
    needs:
      - x86
      - arm32
      - arm64
    steps:
      - name: Mount x86 cache
        uses: actions/cache/restore@v4
        with:
          key: ipxe-x86-${{ env.IPXE_REF }}
          path:  |
            src/bin/*.kpxe
            src/bin*/*.efi

      - name: Mount arm32 cache
        uses: actions/cache/restore@v4
        with:
          key: ipxe-arm32-${{ env.IPXE_REF }}
          path: |
            src/bin-arm32-efi/snponly.efi

      - name: Mount arm64 cache
        uses: actions/cache/restore@v4
        with:
          key: ipxe-arm64-${{ env.IPXE_REF }}
          path: |
            src/bin-arm64-efi/snponly.efi

      - name: Create artifact
        uses: actions/upload-artifact@v4
        with:
          name: ipxe-roms
          path: src/bin*/*
